#include <ESP8266WiFi.h>
#include <WiFiUdp.h>

const char* ssid = "iBall-Baton";
const char* password = "abhisha@123";

WiFiUDP Udp;
unsigned int localUdpPort = 5000;  // local port to listen on
char incomingPacket[255];  // buffer for incoming packets
char  replyPacket[] = "Hi there! Got the message :-)";  // a reply string to send back
int gpio_pins[] = {2,4,12,14};
String app[] = {"bulb","fan","tv","hall light"};
bool ok;

void setup()
{
  for(int i=0; i<4 ; i++)
    pinMode(gpio_pins[i], OUTPUT);
    
  
  Serial.begin(9600);
  Serial.println();

  Serial.printf("Connecting to %s ", ssid);
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED)
  {
    delay(500);
    Serial.print(".");
  }
  Serial.println(" connected");

  Udp.begin(localUdpPort);
  Serial.printf("Now listening at IP %s, UDP port %d\n", WiFi.localIP().toString().c_str(), localUdpPort);
}


void loop()
{
  int packetSize = Udp.parsePacket();
  if (packetSize)
  {
    // receive incoming UDP packets
    Serial.printf("Received %d bytes from %s, port %d\n", packetSize, Udp.remoteIP().toString().c_str(), Udp.remotePort());
    int len = Udp.read(incomingPacket, 255);
    String appliance = "";
    String stat;
    
    if (len > 0)
    {
      incomingPacket[len] = 0;

      for (int i=0; i<len;i++)
      {
        
        if(incomingPacket[i]==',')
        {
          ok = true;
          int j=0;
          for (j = 0; j < i; j++) 
          {
            appliance = appliance + incomingPacket[j];
          }
            stat = incomingPacket[j+1];         
        }
      }
      Serial.printf("out of loops");
      if (ok)
      {
        int x;
        for(x=0; x<4 ; x++)
          {
            if(app[x] == appliance)
            {
              Serial.printf("Inside of comparing statament");
              if(stat=="0")
                digitalWrite(gpio_pins[x], HIGH);
              else if(stat=="1")
                digitalWrite(gpio_pins[x], LOW);
                break;
            }
          }
        Serial.print(appliance);      
        Serial.print(stat);
        ok=false;
      }
     
    }
    
    Serial.printf("UDP packet contents: %s\n", incomingPacket);

    // send back a reply, to the IP address and port we got the packet from
    Udp.beginPacket(Udp.remoteIP(), Udp.remotePort());
    Udp.write(replyPacket);
    Udp.endPacket();
  }
}